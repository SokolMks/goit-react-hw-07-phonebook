{"version":3,"sources":["components/Phonebook/Phonebook.module.css","components/Section/Section.module.css","components/Section/Section.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/Contacts/Contacts.js","components/Phonebook/Phonebook.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/Contacts/Contacts.module.css"],"names":["module","exports","Section","children","className","style","section","fetchContactsRequest","createAction","fetchContactsSucces","fetchContactsError","addContactsRequest","addContactsSucces","addContactsError","deleteContactRequest","deleteContactSucces","deleteContactError","filterContact","axios","defaults","baseURL","data","dispatch","contacts","name","number","post","then","catch","error","id","delete","get","getFilter","state","filter","getFilteredContacts","createSelector","items","normalizeFilter","toLowerCase","contact","includes","connect","contactsSelectors","onDeleteContact","contactsOperations","fetchContacts","useEffect","container","title","list","map","listElement","btn","onClick","onSubmit","useState","setName","setNumber","handleChangeInput","e","value","currentTarget","target","formReset","containerForm","preventDefault","type","onChange","pattern","required","contactsActions","App","Filter","loading","createReducer","_","payload","combineReducers","store","configureStore","reducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77eaa80d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerForm\":\"Phonebook_containerForm__1L122\",\"title\":\"Phonebook_title__YvOZ4\",\"btn\":\"Phonebook_btn__gdlTX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3cGCq\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Section.module.css\";\r\n\r\nconst Section = ({ children }) => <div className={style.section}>{children}</div>;\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSucces = createAction('contacts/fetchContactsSucces');\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactsRequest = createAction('contacts/addContactsRequest');\r\nexport const addContactsSucces = createAction('contacts/addContactsSucces');\r\nexport const addContactsError = createAction('contacts/addContactsError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSucces = createAction('contacts/deleteContactSucces');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const filterContact = createAction('contacts/Filter');","import axios from 'axios';\r\nimport {\r\n  addContactsRequest,\r\n  addContactsSucces,\r\n  addContactsError,\r\n  deleteContactRequest,\r\n  deleteContactSucces,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSucces,\r\n  fetchContactsError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3001';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSucces(data)))\r\n    .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nconst addContact = data => dispatch => {\r\n  const contacts = { name: data.name, number: data.number };\r\n\r\n  dispatch(addContactsRequest());\r\n\r\n  axios\r\n    .post('/contacts', contacts)\r\n    .then(({ data }) => dispatch(addContactsSucces(data)))\r\n    .catch(error => dispatch(addContactsError(error)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSucces(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport default {\r\n  addContact,\r\n  deleteContact,\r\n  fetchContacts,\r\n};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getAllContacts = state => state.contacts.items;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizeFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizeFilter),\r\n    );\r\n  },\r\n);\r\n\r\nexport default {\r\n  getFilter,\r\n  getFilteredContacts,\r\n};","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport contactsOperations from '../../redux/contacts/contacts-operations';\r\nimport contactsSelectors from '../../redux/contacts/contacts-selectors';\r\nimport style from \"./Contacts.module.css\";\r\n\r\nconst Contacts = ({ contacts, onDeleteContact, fetchContacts }) => {\r\n  useEffect(() => {\r\n    fetchContacts();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <h2 className={style.title}>Contacts</h2>\r\n        <ul className={style.list}>\r\n          {contacts.map(({ id, name, number }) => (\r\n            <li key={id} className={style.listElement}>\r\n              <p>\r\n                {name}: {number}\r\n              </p>\r\n              <button className={style.btn} onClick={() => onDeleteContact(id)}>\r\n                Delete contact\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getFilteredContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(contactsOperations.deleteContact(id)),\r\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n});\r\n\r\nContacts.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsOperations from '../../redux/contacts/contacts-operations';\r\nimport PropTypes from 'prop-types';\r\nimport style from \"./Phonebook.module.css\";\r\n\r\nfunction PhoneBook({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChangeInput = (e) => {\r\n    const { value } = e.currentTarget;\r\n\r\n    if (e.target.name === \"name\") {\r\n      setName(value);\r\n    }\r\n    if(e.target.name === \"number\") {\r\n      setNumber(value);  \r\n    }\r\n  };\r\n\r\n  const onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    //submitForm({ name, number });\r\n    onSubmit({ name, number });\r\n    formReset();\r\n  };\r\n\r\n  const formReset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={style.containerForm} onSubmit={onSubmitForm}>\r\n      <h2 className={style.title}>Phonebook</h2>\r\n      <label>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChangeInput}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChangeInput}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button className={style.btn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nPhoneBook.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: data => dispatch(contactsOperations.addContact(data)),\r\n});\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(PhoneBook);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport * as contactsActions from '../../redux/contacts/contacts-actions';\r\nimport contactsSelectors from '../../redux/contacts/contacts-selectors';\r\n\r\nconst FilterContact = ({ value, onChange }) => {\r\n  return (\r\n    <>\r\n      <p>Find contacts by name</p>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        title=\"Search contacts\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(contactsActions.filterContact(e.target.value)),\r\n});\r\n\r\nFilterContact.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterContact);","import Section from \"./components/Section/Section\";\nimport Contacts from \"./components/Contacts/Contacts\";\nimport PhoneBook from \"./components/Phonebook/Phonebook\";\nimport Filter from \"./components/Filter/Filter\";\n\nfunction App() {\n  return (\n      <Section>\n      <PhoneBook />\n      <Filter />\n      <Contacts />\n      </Section>\n  );\n}\n\nexport default App;","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactsRequest,\r\n  addContactsSucces,\r\n  addContactsError,\r\n  deleteContactRequest,\r\n  deleteContactSucces,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSucces,\r\n  fetchContactsError,\r\n  filterContact,\r\n} from './contacts-actions';\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactsRequest]: () => true,\r\n  [addContactsSucces]: () => false,\r\n  [addContactsError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSucces]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSucces]: () => false,\r\n  [fetchContactsError]: () => false,\r\n});\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSucces]: (_, { payload }) => payload,\r\n  [addContactsSucces]: (state, { payload }) => [payload, ...state],\r\n  [deleteContactSucces]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter, loading });","import { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\n\r\nconst middleware = getDefaultMiddleware =>\r\n  getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  });\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from \"react-redux\";\n//import { PersistGate } from \"redux-persist/integration/react\";\nimport App from './App';\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n    <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contacts_container__13sGp\",\"title\":\"Contacts_title__2Lya0\",\"list\":\"Contacts_list__3Uhgj\",\"listElement\":\"Contacts_listElement__2KWAl\",\"btn\":\"Contacts_btn__1gmgC\",\"label\":\"Contacts_label__2g0mX\"};"],"sourceRoot":""}